---
#Input parameters:
#   temp_folder.path: folder where to generate certificate
#   jenkins_cert_country: country name
#   jenkins_cert_state: state
#   jenkins_cert_location: location(city)
#   jenkins_cert_organization: organization name
#   jenkins_cert_unit: unit
#   jenkins_cert_cn: common name
#   jenkins_cert_validity: number of days before certificate expires
#   jenkins_cert_rsa_size: facultative

- name: "Generate self-certificate"
  shell: |
    openssl req -newkey rsa:{{jenkins_cert_rsa_size}} -nodes -keyout {{temp_folder.path}}/{{jenkins_cert_key_name}} -x509 \
    -days {{jenkins_cert_validity}} -out {{temp_folder.path}}/{{jenkins_cert_cert_name}} \
    -subj "/C={{jenkins_cert_country}}/ST={{jenkins_cert_state}}/L={{jenkins_cert_location}}/O={{jenkins_cert_organization}}/OU={{jenkins_cert_unit}}/CN={{jenkins_cert_cn}}"

#Push it to KMS
- set_fact:
    jenkins_certificates:
      - hostname: "{{current_hostname}}"
        cert: "{{lookup('file',temp_folder.path+'/'+jenkins_cert_cert_name)}}"
        key: "{{lookup('file',temp_folder.path+'/'+jenkins_cert_key_name)}}"
        keystore_password: "{%if jenkins_certificates|json_query(jq_cert_keystore_password) != '' %}{{jenkins_certificates|json_query(jq_cert_keystore_password)}}{%else%}default_keystore_password{%endif%}"

- debug:
    msg: "Please push the content of the certificate file to your configuration: {{temp_folder.path}}/{{jenkins_cert_cert_name}}"

- debug:
    msg: "Please push the content of the key file to your configuration: {{temp_folder.path}}/{{jenkins_cert_key_name}}"